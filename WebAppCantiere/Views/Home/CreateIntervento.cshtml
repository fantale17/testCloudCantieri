@model InterventoViewModel

@{
    ViewData["Title"] = "CreateIntervento";
}

<h2>CreateIntervento</h2>

<h4>Intervento</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateIntervento"  enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Tipo" class="control-label"></label>
                <input asp-for="Tipo" class="form-control" />
                <span asp-validation-for="Tipo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Note" class="control-label"></label>
                <input asp-for="Note" class="form-control" />
                <span asp-validation-for="Note" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StimaCosto" class="control-label"></label>
                <input asp-for="StimaCosto" class="form-control" />
                <span asp-validation-for="StimaCosto" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Photo"></label>
                <input asp-for="Photo" type="file" value="Upload" accept="image/png, image/jpeg" class="form-control-file"/>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
            <div class="form-group">
                <input type="hidden" asp-for="IdCantiere" class="form-control" hidden/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
